---
import { Code } from "astro/components";
import { Icon } from "astro-icon/components";
import fs from "fs";
import { iconColors } from "@/lib";

interface Props {
  bilibili?: string;
  youtube?: string;
  jsFiddle?: string;
  postId: string;
}

const { postId } = Astro.props;

const htmlFileName = `src/content/posts/${postId}/_src/index.html`;
const cssFileName = `src/content/posts/${postId}/_src/index.css`;
const jsFileName = `src/content/posts/${postId}/_src/index.js`;
const dataFileName = `src/content/posts/${postId}/_src/data.json`;


let htmlCode = "";
let cssCode = "";
let jsCode = "";
let data: {
  links: { name: string; url: string; icon: keyof typeof iconColors }[];
} = { links: [] };

if (fs.existsSync(htmlFileName)) {
  htmlCode = fs.readFileSync(htmlFileName, "utf-8");
}
if (fs.existsSync(cssFileName)) {
  cssCode = fs.readFileSync(cssFileName, "utf-8");
}
if (fs.existsSync(jsFileName)) {
  jsCode = fs.readFileSync(jsFileName, "utf-8");
}
if (fs.existsSync(dataFileName)) {
  data = JSON.parse(fs.readFileSync(dataFileName, "utf-8"));
}


const tabs = [
  {
    label: "html",
    value: "html",
  },
  {
    label: "css",
    value: "css",
  },
  {
    label: "js",
    value: "js",
  },
];
---

<div class="my-6">
  <div class="text-sm text-gray-500 mb-2 font-bold">源码</div>
  <div class="flex gap-2">
    {
      htmlCode && (
        <span id="html" class={`cursor-pointer tab active`}>
          html
        </span>
      )
    }
    {
      cssCode && (
        <span id="css" class={`cursor-pointer tab`}>
          css
        </span>
      )
    }
    {
      jsCode && (
        <span id="js" class={`cursor-pointer tab`}>
          js
        </span>
      )
    }
  </div>
  <div>
    {
      tabs.map((tab) => (
        <div id={`${tab.value}-code`}>
          {tab.value === "html" && htmlCode && (
            <Code class="code" code={htmlCode} lang={"html"} />
          )}
          {tab.value === "css" && cssCode && (
            <Code class="code" code={cssCode} lang={"css"} />
          )}
          {tab.value === "js" && jsCode && (
            <Code class="code" code={jsCode} lang={"js"} />
          )}
        </div>
      ))
    }
  </div>
  <div class="flex gap-2 mt-4">
    {
      data.links.map((link) => (
        <a href={link.url} target="_blank">
          <Icon
            name={`logos/${link.icon}`}
            class={`w-6 h-6`}
            style={`color: ${iconColors[link.icon]}`}
          />
        </a>
      ))
    }
  </div>
</div>

<style>
  .tab.active {
    color: #000;
    border-bottom: 2px solid #000;
  }
  .code {
    display: none;
  }
  .code.show {
    display: block;
  }
</style>

<script>
  let currentTab = "html";
  document.getElementById("html")?.classList.add("active");

  function setCurrentTab(tab: string) {
    currentTab = tab;
    const tabs = document.querySelectorAll(".tab");
    tabs.forEach((tab) => {
      tab.classList.remove("active");
    });
    document.getElementById(tab)?.classList.add("active");
    hideAllCode();
    showCode(tab);
  }

  function hideAllCode() {
    const codes = document.querySelectorAll(".code");
    codes.forEach((code) => {
      code.classList.remove("show");
    });
  }

  function showCode(tab: string) {
    const code = document.getElementById(`${tab}-code`);
    code?.querySelector(".code")?.classList.add("show");
  }

  setCurrentTab("html");
  document
    .getElementById("html")
    ?.addEventListener("click", () => setCurrentTab("html"));
  document
    .getElementById("css")
    ?.addEventListener("click", () => setCurrentTab("css"));
  document
    .getElementById("js")
    ?.addEventListener("click", () => setCurrentTab("js"));
</script>
